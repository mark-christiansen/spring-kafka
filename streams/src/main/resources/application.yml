spring:
  application:
    name: spring-kafka-producer

  deserialization.recoverer: org.springframework.kafka.listener.DeadLetterPublishingRecoverer
  kafka:
    bootstrap-servers:
      - localhost:9092
      - localhost:9093
      - localhost:9094
      - localhost:9095
      - localhost:9096
    producer:
      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    properties:
      # for KafkaAvroDeserializer
      schema.registry.url: http://localhost:8081
      specific.avro.reader: true
    streams:
      acks: all
      application.id: spring-kafka-stream
      auto.reset.offset: earliest
      bootstrap.servers: localhost:9092,localhost:9093,localhost:9094,localhost:9095,localhost:9096
      default.key.serde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerde
      default.value.serde: io.confluent.kafka.streams.serdes.avro.GenericAvroSerde
      default.timestamp.extractor: org.apache.kafka.streams.processor.WallclockTimestampExtractor
      default.deserialization.exception.handler: com.opi.kafka.streams.error.DefaultDeserializationExceptionHandler
      default.production.exception.handler: com.opi.kafka.streams.error.DefaultProductionExceptionHandler
      schema.registry.url: http://localhost:8081
      # for changelog topics and repartition topics, match other topics to guarantee fault tolerance
      replication.factor: 3
      min.insync.replicas: 2
      request.timeout.ms: 60000
      session.timeout.ms: 30000
      processing.guarantee: at_least_once
      retries: 2147483647
      max.in.flight.requests.per.connection: 1
      buffered.records.per.partition: 1000
      commit.interval.ms: 30000
      num.stream.threads: 10
      poll.ms: 100
      # replica state stores to switch to in failover situations
      #num.standby.replicas: 0
      # consumer configuration
      #main.consumer.max.poll.interval.ms: 300000
      #main.consumer.max.poll.records: 1000
  profiles:
    active: development
    include: streams